function t(t){let n=+t;return isNaN(n)&&(n="true"===t||"false"!==t&&("null"===t?null:decodeURIComponent(t))),n}function n(t){const n=typeof t;return"string"===n?encodeURIComponent(t):"number"===n||"boolean"===n?t.toString():null===t?"null":void 0}const e=function(t){const n=t.match(/(https?:)?\/\/([^:/?#]+)?(?::(\d*))?((?:[^?#/]*\/)*[^?#]*)(?:(\?[^#]*))?(?:(#.*))?/i);if(n)return{protocol:n[1]?n[1].toLowerCase():"",hostname:n[2]||"",port:n[3]||"",pathname:n[4]||"/",search:n[5]||"",hash:n[6]||""}},r=function(t){let{protocol:n,hostname:e,port:r,pathname:o,search:s,hash:i}=t;if(n&&":"!==n.slice(-1))throw new Error('url.protocol must ends with ":".');if(!e)throw new Error("url.hostname is required.");if(e="//"+e,r){if(0===r.indexOf(":"))throw new Error('url.port must not starts with ":".');r=":"+r}return"/"===o&&(o=""),"?"===s&&(s=""),"#"===i&&(i=""),n+e+r+o+s+i},o=function(t){const n=t.match(/((?:[^?#/]*\/)*[^?#]*)(?:(\?[^#]*))?/i);if(n){let t=n[1];return"string"==typeof t&&0!==t.indexOf("/")&&(t="/"+t),{pathname:t||"/",search:n[2]||""}}},s=function(t){return t.pathname+t.search},i=function(n){const e={},r=n.split("&");for(let n=0,o=r.length;n<o;n++){let[o,s]=r[n].split("=");if("string"==typeof o&&"string"==typeof s)if(o=o.trim(),s=t(s),"[]"===o.slice(-"[]".length)){o=o.slice(0,-"[]".length).trim();(e[o]||(e[o]=[])).push(s)}else e[o]=s}return e},l=function(t){const e=[];for(let r in t){const o=t[r];if(Array.isArray(o))for(let t=0,s=o.length;t<s;t++){const s=n(o[t]);"string"==typeof s&&e.push(`${r}[]=${s}`)}else{const t=n(o);"string"==typeof t&&e.push(`${r}=${t}`)}}return e.length>0?e.join("&"):""},c="0.0.1";export{o as parseHash,i as parseQuery,e as parseUrl,s as stringifyHash,l as stringifyQuery,r as stringifyUrl,c as version};
//# sourceMappingURL=url.esm.min.js.map
